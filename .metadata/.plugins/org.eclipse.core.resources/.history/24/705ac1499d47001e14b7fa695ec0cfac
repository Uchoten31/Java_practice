package javaOOP4;

public class Q308 {
	public static void main(String[] args) {
		
        // 募金箱オブジェクトの取得
        CollectionBox cb = CollectionBox.getInstance();
        
        // 偽物の募金箱を作れないようにする（コンパイルエラー）
        // CollectionBox imitation = new CollectionBox();
        
        // 5人の大富豪オブジェクトを生成
        MultiMillionaire mm1 = new MultiMillionaire(cb);
        MultiMillionaire mm2 = new MultiMillionaire(cb);
        MultiMillionaire mm3 = new MultiMillionaire(cb);
        MultiMillionaire mm4 = new MultiMillionaire(cb);
        MultiMillionaire mm5 = new MultiMillionaire(cb);
        
        // 募金の開始
        mm1.start();
        mm2.start();
        mm3.start();
        mm4.start();
        mm5.start();
        
        // 全員の募金が終わるまで待つ
        try {
            mm1.join();
            mm2.join();
            mm3.join();
            mm4.join();
            mm5.join();
        } catch(InterruptedException e) {
            e.printStackTrace();
        }
        
        // 募金総額の発表
        System.out.println("募金総額は" + cb.getTotalAmout() + "円です。");
        
    }
}
// ここに大富豪クラスを作成してください
class MultiMillionaire extends Thread {
	
	// 募金箱インスタンスフィールド
	private CollectionBox collectionBox;
	
	// コンストラクタ
	public MultiMillionaire(CollectionBox collectionBox) {
		this.collectionBox = collectionBox;
	}
	
	@Override
	public void run() {
		// 100万回ループさせる
		for(int i = 0; i < 1000000; i++) {
			// 貯金箱に1円募金する
			collectionBox += 1;
		}
	}
	
}


// ここに募金箱クラスを作成してください
class CollectionBox {
	
	private int totalAmount;	// 募金総額
	
	// コンストラクタ（別クラスからインスタンス化できない）
	private CollectionBox() {
		
	}
	
	// 募金箱オブジェクトを取得するメソッド
	public void getInstance() {
		new CollectionBox();
	}
	
	// お金を寄付するメソッド
	public void contribute(int amount) {
		
	}
	
	// 募金総額を取得するゲッター
	public int getTotalAmount() {
		return totalAmount;
	}
	
}



